/* This is auto-generated code. Edit at your own peril. */
#include "testing/testing.h"

#ifndef TESTING_HEADER_INCLUDED
#define TESTING_HEADER_INCLUDED

void testing__test__init_memory(int *__unused, gconstpointer __data);
void testing__test__value_to_boolean(int *__unused, gconstpointer __data);
void testing__test__value_to_ulong(int *__unused, gconstpointer __data);
void testing__test__init_boolean(int *__unused, gconstpointer __data);
void testing__test__init_date(int *__unused, gconstpointer __data);
void testing__test__init_ulong(int *__unused, gconstpointer __data);
void testing__test__init_string(int *__unused, gconstpointer __data);
void testing__test__init_invalid(int *__unused, gconstpointer __data);
void testing__test__init_empty(int *__unused, gconstpointer __data);
void testing__test__new_memory(int *__unused, gconstpointer __data);
void testing__test__new_boolean(int *__unused, gconstpointer __data);
void testing__test__new_date(int *__unused, gconstpointer __data);
void testing__test__new_ulong(int *__unused, gconstpointer __data);
void testing__test__new_string(int *__unused, gconstpointer __data);
void testing__test__new_invalid(int *__unused, gconstpointer __data);
void testing__test__new_empty(int *__unused, gconstpointer __data);
void testing__test__get_boolean(int *__unused, gconstpointer __data);
void testing__test__get_date(int *__unused, gconstpointer __data);
void testing__test__get_ulong(int *__unused, gconstpointer __data);
void testing__test__get_string(int *__unused, gconstpointer __data);
void testing__test__dup_attribute(int *__unused, gconstpointer __data);
void testing__test__copy_attribute(int *__unused, gconstpointer __data);
void testing__test__new_attributes(int *__unused, gconstpointer __data);
void testing__test__new_empty_attributes(int *__unused, gconstpointer __data);
void testing__test__add_data_attributes(int *__unused, gconstpointer __data);
void testing__test__add_attributes(int *__unused, gconstpointer __data);
void testing__test__add_all_attributes(int *__unused, gconstpointer __data);
void testing__test__find_attributes(int *__unused, gconstpointer __data);
void testing__setup__load_module(int *__unused, gconstpointer __data);
void testing__teardown__load_module(int *__unused, gconstpointer __data);
void testing__test__invalid_modules(int *__unused, gconstpointer __data);
void testing__test__module_equals_hash(int *__unused, gconstpointer __data);
void testing__test__module_props(int *__unused, gconstpointer __data);
void testing__test__module_info(int *__unused, gconstpointer __data);
void testing__test__module_enumerate(int *__unused, gconstpointer __data);
void testing__setup__load_slots(int *__unused, gconstpointer __data);
void testing__teardown__load_slots(int *__unused, gconstpointer __data);
void testing__test__slot_info(int *__unused, gconstpointer __data);
void testing__test__slot_props(int *__unused, gconstpointer __data);
void testing__test__slot_equals_hash(int *__unused, gconstpointer __data);
void testing__test__slot_mechanisms(int *__unused, gconstpointer __data);
void testing__test__token_info_match_null(int *__unused, gconstpointer __data);
void testing__test__token_info_match_label(int *__unused, gconstpointer __data);
void testing__test__token_info_match_different(int *__unused, gconstpointer __data);
void testing__setup__load_session(int *__unused, gconstpointer __data);
void testing__teardown__load_session(int *__unused, gconstpointer __data);
void testing__test__session_props(int *__unused, gconstpointer __data);
void testing__test__session_info(int *__unused, gconstpointer __data);
void testing__test__open_close_session(int *__unused, gconstpointer __data);
void testing__test__init_set_pin(int *__unused, gconstpointer __data);
void testing__test__login_logout(int *__unused, gconstpointer __data);
void testing__test__auto_login(int *__unused, gconstpointer __data);
void testing__setup__prep_object(int *__unused, gconstpointer __data);
void testing__teardown__prep_object(int *__unused, gconstpointer __data);
void testing__test__object_props(int *__unused, gconstpointer __data);
void testing__test__object_equals_hash(int *__unused, gconstpointer __data);
void testing__test__create_object(int *__unused, gconstpointer __data);
void testing__test__destroy_object(int *__unused, gconstpointer __data);
void testing__test__get_attributes(int *__unused, gconstpointer __data);
void testing__test__get_data_attribute(int *__unused, gconstpointer __data);
void testing__test__set_attributes(int *__unused, gconstpointer __data);
void testing__test__find_objects(int *__unused, gconstpointer __data);
void testing__setup__crypto_session(int *__unused, gconstpointer __data);
void testing__teardown__crypto_session(int *__unused, gconstpointer __data);
void testing__test__encrypt(int *__unused, gconstpointer __data);
void testing__test__decrypt(int *__unused, gconstpointer __data);
void testing__test__login_context_specific(int *__unused, gconstpointer __data);
void testing__test__sign(int *__unused, gconstpointer __data);
void testing__test__verify(int *__unused, gconstpointer __data);
void testing__test__generate_key_pair(int *__unused, gconstpointer __data);
void testing__test__wrap_key(int *__unused, gconstpointer __data);
void testing__test__unwrap_key(int *__unused, gconstpointer __data);
void testing__test__derive_key(int *__unused, gconstpointer __data);
void testing__setup__uri(int *__unused, gconstpointer __data);
void testing__teardown__uri(int *__unused, gconstpointer __data);
void testing__test__uri_parse(int *__unused, gconstpointer __data);
void testing__test__uri_parse_bad_scheme(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_label(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_label_and_klass(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_id(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_bad_string_encoding(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_bad_binary_encoding(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_token(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_token_bad_encoding(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_bad_syntax(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_library(int *__unused, gconstpointer __data);
void testing__test__uri_parse_with_library_bad_encoding(int *__unused, gconstpointer __data);
void testing__test__uri_build_empty(int *__unused, gconstpointer __data);
void testing__test__uri_build_with_token_info(int *__unused, gconstpointer __data);
void testing__test__uri_build_with_token_null_info(int *__unused, gconstpointer __data);
void testing__test__uri_build_with_token_empty_info(int *__unused, gconstpointer __data);
void testing__test__uri_build_with_attributes(int *__unused, gconstpointer __data);
void testing__test__uri_parse_private_key(int *__unused, gconstpointer __data);
void testing__test__uri_parse_parse_secret_key(int *__unused, gconstpointer __data);
void testing__test__uri_parse_parse_unknown_objecttype(int *__unused, gconstpointer __data);
void testing__test__uri_build_objecttype_cert(int *__unused, gconstpointer __data);
void testing__test__uri_build_objecttype_private(int *__unused, gconstpointer __data);
void testing__test__uri_build_objecttype_public(int *__unused, gconstpointer __data);
void testing__test__uri_build_objecttype_secret(int *__unused, gconstpointer __data);
void testing__test__uri_build_with_library(int *__unused, gconstpointer __data);
void testing__setup__enumerator(int *__unused, gconstpointer __data);
void testing__teardown__enumerator(int *__unused, gconstpointer __data);
void testing__test__enumerator_create(int *__unused, gconstpointer __data);
void testing__test__enumerator_create_slots(int *__unused, gconstpointer __data);
void testing__test__enumerator_next(int *__unused, gconstpointer __data);
void testing__test__enumerator_next_slots(int *__unused, gconstpointer __data);
void testing__test__enumerator_next_and_resume(int *__unused, gconstpointer __data);
void testing__test__enumerator_next_n(int *__unused, gconstpointer __data);
void testing__test__enumerator_next_async(int *__unused, gconstpointer __data);
void testing__test__enumerator_attributes(int *__unused, gconstpointer __data);
void testing__test__enumerator_token_match(int *__unused, gconstpointer __data);
void testing__setup__modules(int *__unused, gconstpointer __data);
void testing__teardown__modules(int *__unused, gconstpointer __data);
void testing__test__modules_enumerate_objects(int *__unused, gconstpointer __data);
void testing__test__modules_token_for_uri(int *__unused, gconstpointer __data);
void testing__test__modules_token_for_uri_not_found(int *__unused, gconstpointer __data);
void testing__test__modules_token_for_uri_error(int *__unused, gconstpointer __data);
void testing__test__modules_object_for_uri(int *__unused, gconstpointer __data);
void testing__test__modules_object_for_uri_not_found(int *__unused, gconstpointer __data);
void testing__test__modules_object_for_uri_error(int *__unused, gconstpointer __data);
void testing__test__modules_objects_for_uri(int *__unused, gconstpointer __data);
void testing__test__modules_enumerate_uri(int *__unused, gconstpointer __data);

#endif /* TESTING_HEADER_INCLUDED */

