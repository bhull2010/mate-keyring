/* This is auto-generated code. Edit at your own peril. */
#include "testing/testing.h"

DECLARE_TEST (asn1_boolean);
DECLARE_TEST (asn1_integer);
DECLARE_TEST (asn1_octet_string);
DECLARE_TEST (asn1_generalized_time);
DECLARE_TEST (asn1_implicit);
DECLARE_TEST (asn1_explicit);
DECLARE_TEST (asn1_bit_string_decode);
DECLARE_TEST (asn1_bit_string_decode_bad);
DECLARE_TEST (asn1_bit_string_decode_ulong);
DECLARE_TEST (asn1_bit_string_encode_decode);
DECLARE_TEST (asn1_bit_string_encode_decode_ulong);
DECLARE_TEST (asn1_bit_string_encode_decode_zero);
DECLARE_TEST (asn1_have);
DECLARE_TEST (asn1_any_set_raw);
DECLARE_SETUP (asn1_tree);
DECLARE_TEARDOWN (asn1_tree);
DECLARE_TEST (node_name);
DECLARE_TEST (asn1_integers);
DECLARE_TEST (boolean);
DECLARE_TEST (write_value);
DECLARE_TEST (element_length_content);
DECLARE_TEST (read_element);
DECLARE_TEST (oid);
DECLARE_TEST (general_time);
DECLARE_TEST (utc_time);
DECLARE_TEST (read_time);
DECLARE_TEST (read_date);
DECLARE_TEST (create_by_oid);
DECLARE_TEST (create_by_oid_invalid);
DECLARE_TEST (create_by_bad_order);
DECLARE_TEST (count);
DECLARE_SETUP (dn_cert);
DECLARE_TEARDOWN (dn_cert);
DECLARE_TEST (read_dn);
DECLARE_TEST (dn_value);
DECLARE_TEST (parse_dn);
DECLARE_TEST (read_dn_part);
DECLARE_TEST (cleanup);
DECLARE_TEST (order);
DECLARE_TEST (reregister);
DECLARE_TEST (remove);
DECLARE_TEST (hex_encode);
DECLARE_TEST (hex_encode_spaces);
DECLARE_TEST (hex_decode);
DECLARE_TEST (oid_tests);
DECLARE_TEST (zero_padding);
DECLARE_TEST (zero_padding_no_data);
DECLARE_TEST (pkcs1_one_padding);
DECLARE_TEST (pkcs1_one_padding_no_data);
DECLARE_TEST (pkcs1_two_padding);
DECLARE_TEST (pkcs1_padding_invalid_prefix);
DECLARE_TEST (pkcs1_padding_invalid_type);
DECLARE_TEST (pkcs1_padding_invalid_no_zero);
DECLARE_TEST (pkcs1_padding_invalid_length);
DECLARE_TEST (pkcs7_padding);
DECLARE_TEST (pkcs7_padding_equal_block);
DECLARE_TEST (pkcs7_padding_zero);
DECLARE_TEST (pkcs7_padding_invalid_zero);
DECLARE_TEST (pkcs7_padding_invalid_too_long);
DECLARE_TEST (pkcs7_padding_invalid_different);
DECLARE_TEST (secmem_alloc_free);
DECLARE_TEST (secmem_realloc_across);
DECLARE_TEST (secmem_alloc_two);
DECLARE_TEST (secmem_realloc);
DECLARE_TEST (secmem_multialloc);
DECLARE_TEST (secmem_clear);
DECLARE_TEST (secmem_strclear);
DECLARE_SETUP (crypto_setup);
DECLARE_TEARDOWN (crypto_setup);
DECLARE_TEST (generate_key_simple);
DECLARE_TEST (generate_key_pkcs12);
DECLARE_TEST (generate_key_pbkdf2);
DECLARE_TEST (generate_key_pbe);
DECLARE_TEST (parse_reference);
DECLARE_TEST (write_reference);
DECLARE_TEST (openssl_roundtrip);
DECLARE_TEST (dh_perform);
DECLARE_TEST (dh_short_pair);
DECLARE_TEST (dh_default_768);
DECLARE_TEST (dh_default_1024);
DECLARE_TEST (dh_default_1536);
DECLARE_TEST (dh_default_2048);
DECLARE_TEST (dh_default_3072);
DECLARE_TEST (dh_default_4096);
DECLARE_TEST (dh_default_8192);
DECLARE_TEST (dh_default_bad);
DECLARE_TEST (test_spawn_sync);
DECLARE_TEST (test_spawn_sync_error);
DECLARE_TEST (test_spawn_async);
DECLARE_TEST (test_spawn_async_none);
DECLARE_TEST (test_spawn_async_error);

